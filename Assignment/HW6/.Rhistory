#  Course          : Data Mining
#  First Name      : Aakash
#  Last Name       : Rami
#  CWId            : 10453138
#  purpose         : Homework Assignment 6
##Load Libraries
library(randomForest)
rm(list=ls())
filename <-file.choose()
breastCancer  <-  read.csv(filename, na.string=" ?")# Load the dataset from CSV file
View(breastCancer)# View breast cancer data
#Data Preperation
breastCancer<-breastCancer[,-1]
cols<-ncol(breastCancer)
breastCancer[1:cols]<-lapply(breastCancer[1:cols],factor)
index<-sort(sample(nrow(breastCancer),round(.25*nrow(breastCancer))))
train_data<-breastCancer[-index,]
test_data<-breastCancer[index,]
#Fitting the model
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, test_data)
table(actual=test_data$Class,Prediction)
#Finding error rate
wrong<- (test_data$Class!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
#  Course          : Data Mining
#  First Name      : Aakash
#  Last Name       : Rami
#  CWId            : 10453138
#  purpose         : Homework Assignment 6
##Load Libraries
library(randomForest)
rm(list=ls())
filename <-file.choose()
breastCancer  <-  read.csv(filename, na.string=" ?")# Load the dataset from CSV file
View(breastCancer)# View breast cancer data
#Data Preperation
breastCancer<-breastCancer[,-1]
cols<-ncol(breastCancer)
breastCancer[1:cols]<-lapply(breastCancer[1:cols],factor)
index<-sort(sample(nrow(breastCancer),round(.25*nrow(breastCancer))))
train_data<-breastCancer[-index,]
test_data<-breastCancer[index,]
#Fitting the model
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, test_data)
table(actual=test_data$Class,Prediction)
#Finding error rate
wrong<- (test_data$Class!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
# Name : Manan Bhatt
# CS 513 B  - Knowledge Discovery And Data Mining
# HW Assignment 6.2
# CWID : 104530306
rm(list=ls())
#install.packages("randomForest")
library(randomForest)
ChooseFile <- file.choose()
Breast_Cancer_Data_NO_MISSING<- read.csv(ChooseFile,header = TRUE, na.strings='?')
#View(Breast_Cancer_Data_NO_MISSING)
#Data Preparation
Breast_Cancer_Data_NO_MISSING <- Breast_Cancer_Data_NO_MISSING[,-1]
#View(Breast_Cancer_Data_NO_MISSING)
cols <- ncol(Breast_Cancer_Data_NO_MISSING)
cols
Breast_Cancer_Data_NO_MISSING[1:cols] <- lapply(Breast_Cancer_Data_NO_MISSING[1:cols], factor)
View(Breast_Cancer_Data_NO_MISSING)
#Splitting Data
split<-sort(sample(nrow(Breast_Cancer_Data_NO_MISSING),round(.25*nrow(Breast_Cancer_Data_NO_MISSING))))
Training_Data <- Breast_Cancer_Data_NO_MISSING[-split,]
Testing_Data <- Breast_Cancer_Data_NO_MISSING[split,]
#Model
fit <- randomForest( Class~., data=Training_Data, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, Testing_Data)
table(actual=Testing_Data$Class,Prediction)
#Finding error rate
wrong<- (Testing_Data$Class!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
library(randomForest)
rm(list=ls())
ChooseFile <- file.choose()
Breast_Cancer_Data_NO_MISSING<- read.csv(ChooseFile,header = TRUE, na.strings='?')
Breast_Cancer_Data_NO_MISSING <- Breast_Cancer_Data_NO_MISSING[,-1]
cols <- ncol(Breast_Cancer_Data_NO_MISSING)
Breast_Cancer_Data_NO_MISSING[1:cols] <- lapply(Breast_Cancer_Data_NO_MISSING[1:cols], factor)
View(Breast_Cancer_Data_NO_MISSING)
split<-sort(sample(nrow(Breast_Cancer_Data_NO_MISSING),round(.25*nrow(Breast_Cancer_Data_NO_MISSING))))
Training_Data <- Breast_Cancer_Data_NO_MISSING[-split,]
Testing_Data <- Breast_Cancer_Data_NO_MISSING[split,]
fit <- randomForest( Class~., data=Training_Data, importance=TRUE, ntree=1000)
ChooseFile <- file.choose()
Breast_Cancer_Data_NO_MISSING<- read.csv(ChooseFile, na.strings='?')
#View(Breast_Cancer_Data_NO_MISSING)
#Data Preparation
Breast_Cancer_Data_NO_MISSING <- Breast_Cancer_Data_NO_MISSING[,-1]
#View(Breast_Cancer_Data_NO_MISSING)
cols <- ncol(Breast_Cancer_Data_NO_MISSING)
cols
Breast_Cancer_Data_NO_MISSING[1:cols] <- lapply(Breast_Cancer_Data_NO_MISSING[1:cols],factor)
View(Breast_Cancer_Data_NO_MISSING)
index<-sort(sample(nrow(Breast_Cancer_Data_NO_MISSING),round(.25*nrow(Breast_Cancer_Data_NO_MISSING))))
train_data<-Breast_Cancer_Data_NO_MISSING[-index,]
test_data<-Breast_Cancer_Data_NO_MISSING[index,]
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
library(randomForest)
rm(list=ls())
filename <-file.choose()
breastCancer  <-  read.csv(filename, na.string=" ?")# Load the dataset from CSV file
View(breastCancer)# View breast cancer data
#Data Preperation
breastCancer<-breastCancer[,-1]
cols<-ncol(breastCancer)
breastCancer[1:cols]<-lapply(breastCancer[1:cols],factor)
index<-sort(sample(nrow(breastCancer),round(.25*nrow(breastCancer))))
train_data<-breastCancer[-index,]
test_data<-breastCancer[index,]
#Fitting the model
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, test_data)
table(actual=test_data$Class,Prediction)
#Finding error rate
wrong<- (test_data$Class!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, Testing_Data)
table(actual=test_data$Class,Prediction)
wrong<- (test_data$Class!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
library(randomForest)
rm(list=ls())
#install.packages("randomForest")
ChooseFile <- file.choose()
Breast_Cancer_Data_NO_MISSING<- read.csv(ChooseFile, na.strings='?')
#View(Breast_Cancer_Data_NO_MISSING)
#Data Preparation
Breast_Cancer_Data_NO_MISSING <- Breast_Cancer_Data_NO_MISSING[,-1]
#View(Breast_Cancer_Data_NO_MISSING)
cols <- ncol(Breast_Cancer_Data_NO_MISSING)
cols
Breast_Cancer_Data_NO_MISSING[1:cols] <- lapply(Breast_Cancer_Data_NO_MISSING[1:cols],factor)
View(Breast_Cancer_Data_NO_MISSING)
#Splitting Data
index<-sort(sample(nrow(Breast_Cancer_Data_NO_MISSING),round(.25*nrow(Breast_Cancer_Data_NO_MISSING))))
train_data<-Breast_Cancer_Data_NO_MISSING[-index,]
test_data<-Breast_Cancer_Data_NO_MISSING[index,]
#Model
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, Testing_Data)
table(actual=test_data$Class,Prediction)
#Finding error rate
wrong<- (test_data$Class!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
View(Breast_Cancer_Data_NO_MISSING)
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
library(randomForest)
rm(list=ls())
library(randomForest)
library(randomForest)
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
library(randomForest)
ChooseFile <-file.choose()
Breast_Cancer_Data_NO_MISSING<- read.csv(ChooseFile, na.strings='?')
Breast_Cancer_Data_NO_MISSING <- Breast_Cancer_Data_NO_MISSING[,-1]
cols <- ncol(Breast_Cancer_Data_NO_MISSING)
Breast_Cancer_Data_NO_MISSING[1:cols] <- lapply(Breast_Cancer_Data_NO_MISSING[1:cols],factor)
index<-sort(sample(nrow(Breast_Cancer_Data_NO_MISSING),round(.25*nrow(Breast_Cancer_Data_NO_MISSING))))
train_data<-Breast_Cancer_Data_NO_MISSING[-index,]
test_data<-Breast_Cancer_Data_NO_MISSING[index,]
fit <- randomForest( Class~., data=train_data, importance=TRUE, ntree=1000)
library(C50)
data_file <- file.choose()
breast_cancer <- read.csv(data_file, na.string = "?")
View(breast_cancer)
breast_cancer$Class<-factor(breast_cancer$Class)
##Train and Test Data Preperation
train <- sort(sample(nrow(breast_cancer), size = floor(.70*nrow(breast_cancer)), replace = F))
train_data <- breast_cancer[train,] #Split train Data
test_data <-  breast_cancer[-train,] #Split test Data
##Model Building and Prediction
model<-C5.0(Class~., data = train_data, method = "class")
prediction_data<-predict(model,test_data,type="class")
plot(model)
table(test_data$Class,prediction_data)
wrong_data <- sum(prediction_data!=test_data$Class)
wrong_data
error_rate <- wrong_data/length(prediction_data)
error_rate
rm(list=ls())
library(neuralnet)
data_file <- file.choose()
breast_cancer <- read.csv(data_file, na.string = "?")
View(breast_cancer)
breast_cancer<-data.frame(lapply(breast_cancer[,-1],as.numeric)) #Convert dataset in numeric
breast_normalized <- as.data.frame(apply(breast_cancer[,1:ncol(breast_cancer)],2,function(x) (x - min(x))/(max(x)-min(x))))#Normalization
View(breast_normalized)
#Splitting in test and train
split <- seq (1,nrow(breast_normalized),by=5)
test_data<- breast_normalized[split,]
train_data<-breast_normalized[-split,]
model<- neuralnet( diagnosis~. ,train_data, hidden=5, exclude = NULL,threshold=0.01)
plot(model)
#Predicting the categories
netpred <-predict(model, test_data)
print(netpred)
pred_category <- ifelse(netpred<0.5,0,1)
table(Actual = test_data$diagnosis, Prediction = pred_category)
wrong<- (test_data$diagnosis!=pred_category)
error_rate<-sum(wrong)/length(wrong)
error_rate
rm(list=ls())
library(neuralnet)
data_file <- file.choose()
breast_cancer <- read.csv(data_file, na.string = "?")
View(breast_cancer)
rm(list=ls())
library(neuralnet)
data_file <- file.choose()
breast_cancer <- read.csv(data_file, na.string = "?")
View(breast_cancer)
#  Course          : Data Mining
#  First Name      : Aakash
#  Last Name       : Rami
#  CWId            : 10453138
#  purpose         : Homework Assignment 7
rm(list=ls())
library(neuralnet)
data_file <- file.choose()
breast_cancer <- read.csv(data_file, na.string = "?")
View(breast_cancer)
breast_cancer<-data.frame(lapply(breast_cancer[,-1],as.numeric)) #Convert dataset in numeric
breast_normalized <- as.data.frame(apply(breast_cancer[,1:ncol(breast_cancer)],2,function(x) (x - min(x))/(max(x)-min(x))))#Normalization
View(breast_normalized)
#Splitting in test and train
split <- seq (1,nrow(breast_normalized),by=5)
test_data<- breast_normalized[split,]
train_data<-breast_normalized[-split,]
model<- neuralnet( diagnosis~. ,train_data, hidden=5, exclude = NULL,threshold=0.01)
plot(model)
#Predicting the categories
netpred <-predict(model, test_data)
print(netpred)
pred_category <- ifelse(netpred<0.5,0,1)
table(Actual = test_data$diagnosis, Prediction = pred_category)
wrong<- (test_data$diagnosis!=pred_category)
error_rate<-sum(wrong)/length(wrong)
error_rate
rm(list=ls())
library(cluster)
library(fpc)
data_file <- file.choose()
breast_cancer <- read.csv(data_file, na.string = "?")
View(breast_cancer)
#Data Preperation
breast_cancer<-breast_cancer[-1]
breast_cancer<-na.omit(breast_cancer)#Remove any row with a missing value in any of the columns.
breast_cancer_pred<-breast_cancer[1]
View(breast_cancer_pred)
breast_cancer <-data.frame(lapply(breast_cancer[,-1],as.numeric))
View(breast_cancer)
hclust<-dist(breast_cancer)
hclust_resutls<-hclust(hclust)
plot(hclust_resutls)
hclust_2<-cutree(hclust_resutls,2)
View(hclust_2)
table(hclust_2,t(breast_cancer_pred))
plotcluster(breast_cancer,hclust_2)
#Kmeans Clustering
breast_cancer<-read.csv(data_file,na.strings = ' ?')
breast_cancer<-breast_cancer[,-1]
kmeans_2<- kmeans(breast_cancer[,-1],2,nstart = 10)
kmeans_pred <- kmeans_2$cluster
table(kmeans_pred,breast_cancer[,1])
plotcluster(breast_cancer[-1],kmeans_pred)
